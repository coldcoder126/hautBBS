<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.coldcoder.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="cn.coldcoder.pojo.Product" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="uid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="price" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="images" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="comment_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="report_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="category" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>

  <resultMap id="ProductListVoResultMap" type="cn.coldcoder.vo.ProductListVo">
    <id column="id" property="id"/>
    <result column="price" property="price"/>
    <result column="title" property="title" />
    <result column="description" property="description" />
    <result column="images" property="images"/>
    <result column="comment_num" property="commentNum" />
    <result column="category" property="category"/>
    <result column="status" property="status"/>
    <result column="create_time" property="createTime" />
    <association property="basicUserInfoVo" javaType="cn.coldcoder.vo.BasicUserInfoVo">
      <id column="uid" property="uid"/>
      <result column="nick_name" property="nickName"/>
      <result column="authen_name" property="authenName" />
      <result column="avatar_url" property="avatarUrl"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, price, title, description, images, comment_num, report_num, status, category, create_time,
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.coldcoder.pojo.Product" >
    insert into product (id, uid, price, 
      title, description, images, 
      comment_num, report_num, status, category,
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE},
      #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{images,jdbcType=VARCHAR}, 
      #{commentNum,jdbcType=INTEGER}, #{reportNum,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},#{category,jdbcType=INTEGER},
      now(), #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.coldcoder.pojo.Product" >
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="images != null" >
        images,
      </if>
      <if test="commentNum != null" >
        comment_num,
      </if>
      <if test="reportNum != null" >
        report_num,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="category != null">
        category,
      </if>
        create_time,
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="commentNum != null" >
        #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="reportNum != null" >
        #{reportNum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
        now(),
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.coldcoder.pojo.Product" >
    update product
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="commentNum != null" >
        comment_num = #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="reportNum != null" >
        report_num = #{reportNum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
        update_time = now()
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.coldcoder.pojo.Product" >
    update product
    set uid = #{uid,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      comment_num = #{commentNum,jdbcType=INTEGER},
      report_num = #{reportNum,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      category = #{category,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateSaledStatus" parameterType="map" >
    update product
    set status = 1,update_time = now()
    where id = #{id} and uid = #{uid}
  </update>

  <select id="selectOrderByCreateTime" resultMap="ProductListVoResultMap">
select product.id ,price,title,product.description,images,comment_num,category,product.status,product.create_time,
user.id as uid,user.nick_name,user.authen_name,user.avatar_url
from product,user
where product.uid = user.id and product.status = 0
ORDER BY product.create_time DESC
  </select>

  <select id="selectDeletedList" parameterType="java.lang.Integer" resultMap="ProductListVoResultMap">
    select product.id ,price,title,product.description,images,comment_num,category,product.status,product.create_time,
user.id as uid,user.nick_name,user.authen_name,user.avatar_url
from product,user
where product.uid = user.id and product.status = #{status}
ORDER BY product.create_time DESC
  </select>

  <select id="selectProductListByUid" resultMap="ProductListVoResultMap" parameterType="java.lang.Integer" >
    select id ,price,title,description,images,comment_num,category,status,create_time
    from product
    where uid = #{uid} and status &lt; 2
    ORDER BY create_time DESC
  </select>

  <select id="searchProductByKey" resultMap="ProductListVoResultMap" parameterType="string">
select product.id ,price,title,product.description,images,comment_num,category,product.create_time,
user.id as uid,user.nick_name,user.authen_name,user.avatar_url
from product,user
where product.status =0 and (title like #{key} OR product.description like #{key}) and product.uid = user.id
ORDER BY product.create_time DESC
  </select>

  <select id="selectAllProductByuid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select id,title,description,status,create_time,update_time
        from product
        where uid - #{uid}
  </select>


  <select id="selectByKeyAndStatus" parameterType="java.lang.Integer" resultMap="ProductListVoResultMap">
select product.id ,price,title,product.description,images,comment_num,category,product.status,product.create_time,
user.id as uid,user.nick_name,user.authen_name,user.avatar_url
from product,user
where product.uid = user.id and product.status = 0 and product.id = #{id}
  </select>
</mapper>