<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.coldcoder.dao.AccusationMapper" >
  <resultMap id="BaseResultMap" type="cn.coldcoder.pojo.Accusation" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="tid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="category" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="from_uid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reason" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, tid, category, from_uid, reason, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from accusation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from accusation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.coldcoder.pojo.Accusation" >
    insert into accusation (id, tid, category, 
      from_uid, reason, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{category,jdbcType=INTEGER}, 
      #{fromUid,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, now(),
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.coldcoder.pojo.Accusation" >
    insert into accusation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="fromUid != null" >
        from_uid,
      </if>
      <if test="reason != null" >
        reason,
      </if>
        create_time,
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        #{category,jdbcType=INTEGER},
      </if>
      <if test="fromUid != null" >
        #{fromUid,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
       now(),
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.coldcoder.pojo.Accusation" >
    update accusation
    <set >
      <if test="tid != null" >
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="fromUid != null" >
        from_uid = #{fromUid,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
        update_time = now(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.coldcoder.pojo.Accusation" >
    update accusation
    set tid = #{tid,jdbcType=INTEGER},
      category = #{category,jdbcType=INTEGER},
      from_uid = #{fromUid,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="checkByUidAndTid" parameterType="map" resultType="int">
    select count(1) from accusation
    where tid=#{tid} and from_uid = #{from_uid} and category = #{category}
  </select>

  <insert id="insertByUidAndTid" parameterType="map">
    insert into accusation (tid, category, from_uid, reason, create_time)
    values (#{tid}, #{category}, #{from_uid}, #{reason},now())
  </insert>
</mapper>