<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.coldcoder.dao.TopicCommentMapper" >
  <resultMap id="BaseResultMap" type="cn.coldcoder.pojo.TopicComment" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="from_uid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="to_uid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="topic_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="have_read" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="level" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="parent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="report_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, from_uid, to_uid, topic_id, content, status, have_read, level, parent_id, report_num, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from topic_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from topic_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByTopicId" parameterType="java.lang.Integer">
    delete from topic_comment
    where topic_id = #{topicId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="cn.coldcoder.pojo.TopicComment" >
    insert into topic_comment (id, from_uid, to_uid, 
      topic_id, content, status, 
      have_read, level, parent_id, 
      report_num, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{fromUid,jdbcType=INTEGER}, #{toUid,jdbcType=INTEGER}, 
      #{topicId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, 
      #{haveRead,jdbcType=BIT}, #{level,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{reportNum,jdbcType=INTEGER}, now(), #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.coldcoder.pojo.TopicComment" >
    insert into topic_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fromUid != null" >
        from_uid,
      </if>
      <if test="toUid != null" >
        to_uid,
      </if>
      <if test="topicId != null" >
        topic_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="haveRead != null" >
        have_read,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="reportNum != null" >
        report_num,
      </if>
        create_time,
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fromUid != null" >
        #{fromUid,jdbcType=INTEGER},
      </if>
      <if test="toUid != null" >
        #{toUid,jdbcType=INTEGER},
      </if>
      <if test="topicId != null" >
        #{topicId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="haveRead != null" >
        #{haveRead,jdbcType=BIT},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="reportNum != null" >
        #{reportNum,jdbcType=INTEGER},
      </if>
        now(),
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.coldcoder.pojo.TopicComment" >
    update topic_comment
    <set >
      <if test="fromUid != null" >
        from_uid = #{fromUid,jdbcType=INTEGER},
      </if>
      <if test="toUid != null" >
        to_uid = #{toUid,jdbcType=INTEGER},
      </if>
      <if test="topicId != null" >
        topic_id = #{topicId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="haveRead != null" >
        have_read = #{haveRead,jdbcType=BIT},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="reportNum != null" >
        report_num = #{reportNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.coldcoder.pojo.TopicComment" >
    update topic_comment
    set from_uid = #{fromUid,jdbcType=INTEGER},
      to_uid = #{toUid,jdbcType=INTEGER},
      topic_id = #{topicId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      have_read = #{haveRead,jdbcType=BIT},
      level = #{level,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      report_num = #{reportNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByTopicId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"></include>
    from topic_comment
    where topic_id = #{topicId} and status = 0 and level = 1
  </select>

  <select id="selectChildByParentId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
<include refid="Base_Column_List"></include>
    from topic_comment
    where parent_id = #{parentId} and status = 0 and level = 2
    order by create_time DESC
  </select>

  <update id="updateStatus" parameterType="map" >
    update topic_comment
    set status =1,update_time = now()
    where id = #{id} and from_uid = #{from_uid}
  </update>

  <update id="updateStatusByTopicId" parameterType="map">
        update topic_comment
        set status = #{status},update_time = now()
        where topic_id = #{topicId}
  </update>

  <select id="selectByToUid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from topic_comment
    where to_uid = #{toUid} and from_uid!=#{toUid} and status = 0
    order by create_time DESC
  </select>

  <update id="readAll" parameterType="java.lang.Integer" >
    update topic_comment
    set have_read = 1
    where to_uid = #{toUid} and create_time &lt; now()
  </update>

  <select id="selectByFromUid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from topic_comment
    where from_uid = #{fromUid} and status = 0
    order by create_time DESC
  </select>
</mapper>