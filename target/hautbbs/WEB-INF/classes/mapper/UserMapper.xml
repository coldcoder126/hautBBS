<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.coldcoder.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.coldcoder.pojo.User" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="openid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="nick_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="gender" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="stuid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="real_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="grade" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="authen_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="country" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="province" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="city" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="background_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="avatar_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sign_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <resultMap id="BasicUserInfo" type="cn.coldcoder.vo.BasicUserInfoVo">
    <id column="id" property="uid" />
    <result column="nick_name" property="nickName" />
    <result column="avatar_url" property="avatarUrl" />
    <result column="authen_name" property="authenName"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, openid, nick_name, email, phone, score, gender, status, stuid, real_name, grade, 
    authen_name, country, province, city, description, background_url, avatar_url,sign_time, create_time,
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectPublicUserInfoById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByNickName" resultMap="BaseResultMap" parameterType="string">
    select
    <include refid="Base_Column_List" />
    from user
    where nick_name like #{nickName}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.coldcoder.pojo.User" >
    insert into user (id, openid, nick_name, 
      email, phone, score, gender, 
      status, stuid, real_name, 
      grade, authen_name, country, 
      province, city, description, 
      background_url, avatar_url, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, #{score,jdbcType=INTEGER}, #{gender,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{stuid,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{grade,jdbcType=INTEGER}, #{authenName,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{backgroundUrl,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, now(),
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.coldcoder.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="stuid != null" >
        stuid,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="authenName != null" >
        authen_name,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="backgroundUrl != null" >
        background_url,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
        sign_time,
        create_time,
        update_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="stuid != null" >
        #{stuid,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="authenName != null" >
        #{authenName,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="backgroundUrl != null" >
        #{backgroundUrl,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
        now(),
        now(),
        now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.coldcoder.pojo.User" >
    update user
    <set >
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="stuid != null" >
        stuid = #{stuid,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="authenName != null" >
        authen_name = #{authenName,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="backgroundUrl != null" >
        background_url = #{backgroundUrl,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
        update_time =now(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.coldcoder.pojo.User" >
    update user
    set openid = #{openid,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      score = #{score,jdbcType=INTEGER},
      gender = #{gender,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      stuid = #{stuid,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      authen_name = #{authenName,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      background_url = #{backgroundUrl,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="checkOpenid" parameterType="string" resultType="java.lang.Integer">
    select count(1) from user where openid = #{openid}
  </select>

  <select id="selectIdByOpenId" parameterType="string" resultType="java.lang.Integer">
    select id from user where openid = #{openid}
  </select>

  <insert id="insertOpenid" parameterType="string" >
    <selectKey keyProperty="id" resultType="int" order="AFTER">
      select id from user where openid = #{openid}
    </selectKey>
    insert into user (openid,update_time) values(#{openid},now())
  </insert>

  <update id="updateScore" parameterType="map">
    update user
    set score = score - #{score},update_time = now()
    where id = #{id}
  </update>

  <update id="addScore" parameterType="map">
    update user
    set score = score + #{score},sign_time = now(),update_time = now()
    where id = #{id}
  </update>

  <select id="checkScore" parameterType="map" resultType="java.lang.Boolean" >
    select score > #{score} from user where id = #{id}
  </select>

  <select id="selectBasicByKey" parameterType="java.lang.Integer" resultMap="BasicUserInfo">
    select id,nick_name,avatar_url,authen_name
    from user
    where id = #{id}
  </select>

  <select id="checkNickName" parameterType="string" resultType="java.lang.Integer">
    select count(1) from user where nick_name = #{nickName}
  </select>

  <select id="checkStuid" parameterType="string" resultType="java.lang.Integer">
    select count(1) from user where stuid = #{stuid}
  </select>
</mapper>